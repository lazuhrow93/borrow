@model Borrow.Models.Views.Requests.IncomingRequestsViewModel

<h1>Here are your incoming Requests</h1>
<div>
    <div>
        <table style="width:100%">
            <tr>
                <th>Item</th>
                <th>Requester</th>
                <th>Rate</th>
                <th>Iterations</th>
                <th>Status</th>
                <th></th>
            </tr>
            @for (int i = 0; i < Model.PendingRequestViewModels.Count(); ++i)
            {
                var item = Model.PendingRequestViewModels[i];
                <tr>
                    <td>
                        @item.ItemName
                    </td>
                    <td>
                        @item.Requester
                    </td>
                    <td>
                        @item.Rate
                    </td>
                    <td>
                        @item.Periods
                    </td>
                    <td>
                        @switch (item.CurrentStatus)
                        {
                            case Request.RequestStatus.Pending:
                                <label>Waiting For Owner</label>
                                break;
                            case Request.RequestStatus.Viewed:
                                <label>Viewed</label>
                                break;
                            case Request.RequestStatus.Accepted:
                                <label>Submit your meetup time!</label>
                                break;
                            case Request.RequestStatus.PendingMeetUp:
                                <label>Request Asked to meet up on @item.CurrentMeetUpTime</label>
                                break;
                            case Request.RequestStatus.ConfirmedMeetUp:
                                <label>Meet up!</label>
                                break;
                            case Request.RequestStatus.Lent:
                                <label>Currently Active</label>
                                break;
                            case Request.RequestStatus.Declined:
                                <label>Declined</label>
                                break;
                            case Request.RequestStatus.Expired:
                                <label>Expired</label>
                                break;
                            default:
                                <label>WTF</label>
                                break;
                        }
                    </td>
                    <td>
                        @using (Html.BeginForm("ViewIncomingRequest", "Request", FormMethod.Get))
                        {
                            <button class="btn btn-primary" type="submit" name="requestId" value=@item.RequestId>View</button>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<h1>Here are your Accepted Requests</h1>
<div>
    <div>
        <table style="width:100%">
            <tr>
                <th>Item</th>
                <th>Requester</th>
                <th>Rate</th>
                <th>Iterations</th>
                <th>Status</th>
            </tr>
            @for (int i = 0; i < Model.AcceptedRequestViewModel.Count(); ++i)
            {
                var item = Model.AcceptedRequestViewModel[i];
                <tr>
                    <td>
                        @item.ItemName
                    </td>
                    <td>
                        @item.Requester
                    </td>
                    <td>
                        @item.Rate
                    </td>
                    <td>
                        @item.Periods
                    </td>
                    <td>
                        @using(Html.BeginForm("ViewMeetupSpot", "Request", FormMethod.Get))
                        {
                            <button class="btn btn-primary" type="submit" name="requestId" value=@item.RequestId>Meetup Spot!</button>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
@model Borrow.Models.Views.Requests.RequestViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Current Request</h1>
<div>
    <h4>Here is your Request</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ItemName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ItemName)
        </dd>
        <dt class="col-sm-2">
            Requester:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Requester)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Term)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model=>model.Term)
        </dd>
        <dt class ="col-sm-2">
            @Html.DisplayNameFor(model => model.Periods)
        </dt>
        <dd class ="col-sm-10">
            @Html.DisplayFor(model=>model.Periods)
        </dd>
        <dt class ="col-sm-2">
            @Html.DisplayNameFor(model => model.Rate)
        </dt>
        <dd class ="col-sm-10">
            @Html.DisplayFor(model=>model.Rate)
        </dd>
    </dl>
</div>
<di>
    @switch((RequestEnums.Status)Model.StatusId)
    {
        case RequestEnums.Status.Pending:
        case RequestEnums.Status.Viewed:
            {
                @using (Html.BeginForm("AcceptRequest", "Request", FormMethod.Post))
                {
                    <button class="btn btn-primary" type="submit" name="requestId" value=@Model.RequestId>Accept?</button>
                }
                @using (Html.BeginForm("DeclineRequest", "Request", FormMethod.Post))
                {
                    <button class="btn btn-primary" type="submit" name="requestId" value=@Model.RequestId>Decline?</button>
                }
                break;

            }
        case RequestEnums.Status.Accepted:
            {
                if((RequestEnums.PendingActionFrom)Model.PendingActionFromId == RequestEnums.PendingActionFrom.Requester)
                {
                    <h1>Thanks for Accepting! Now we wait till the meet up time is offered by the requester</h1>
                }
                else
                {
                    <h1>Requester has offered to meet at @Model.MeetupTime</h1>
                    @using (Html.BeginForm("AcceptMeetupSpot", "Request", FormMethod.Post))
                    {
                        <button class="btn btn-primary" type="submit" name="requestId" value=@Model.RequestId>Accept?</button>
                    }
                    @using (Html.BeginForm("DeclineMeetupSpot", "Request", FormMethod.Post))
                    {
                        <button class="btn btn-primary" type="submit" name="requestId" value=@Model.RequestId>Decline?</button>
                    }
                }
            }
            break;
        case RequestEnums.Status.ConfirmedMeetUp:
            @using (Html.BeginForm("ViewMeetupSpot", "Request", FormMethod.Get))
            {
                <button class="btn btn-primary" type="submit" name="requestId" value=@Model.RequestId>View Meetup Spot</button>
            }
            break;
        default:
            <label> WTF </label>
            break;
    }
</di v>
<hr />

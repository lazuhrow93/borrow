@model Borrow.Models.Views.Requests.OutgoingRequestsViewModel

<h1>Here are your outgoing Requests</h1>
<div>
    <div>
        <table style="width:100%">
            <tr>
                <th>Item</th>
                <th>Owner</th>
                <th>Rate</th>
                <th>Periods</th>
                <th>Action</th>
                <th></th>
            </tr>
            @for (int i = 0; i < Model.RequestViewModels.Count(); ++i)
            {
                var item = Model.RequestViewModels[i];
                <tr>
                    <td>
                        @item.ItemName
                    </td>
                    <td>
                        @item.Lender
                    </td>
                    <td>
                        @item.Rate
                    </td>
                    <td>
                        @item.Periods
                    </td>
                    <td>
                        @switch (item.CurrentStatus)
                        {
                            case Request.RequestStatus.Pending:
                                <label>Pending</label>
                                break;
                            case Request.RequestStatus.Viewed:
                                <label>Lender Viewed</label>
                                break;
                            case Request.RequestStatus.PendingMeetUp:
                                <label>Waiting for Lender to Confirm Meetup Time</label>
                                break;
                            case Request.RequestStatus.Accepted:
                                <label>Select Meetup Time</label>
                                break;
                            case Request.RequestStatus.ConfirmedMeetUp:
                                <label>Time to meet! Check your meetup spot and time</label>
                                break;
                            case Request.RequestStatus.Lent:
                                <label>You currently have this item</label>
                                break;
                            case Request.RequestStatus.Declined:
                                <label>Declined</label>
                                break;
                            case Request.RequestStatus.Expired:
                                <label>Expired</label>
                                break;
                            default:
                                <label>WTF</label>
                                break;
                        }
                    </td>
                    <td>
                        @using (Html.BeginForm("ViewOutGoingRequest", "Request", FormMethod.Get))
                        {
                        <button class="btn btn-primary" type="submit" name="requestId" value=@item.RequestId>View!</button>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
@model Borrow.Models.Views.Requests.OutgoingRequestsViewModel

<h1>Here are your outgoing Requests</h1>
<div>
    <div>
        <table style="width:100%">
            <tr>
                <th>Item</th>
                <th>Owner</th>
                <th>Rate</th>
                <th>Periods</th>
                <th>Action</th>
            </tr>
            @for (int i = 0; i < Model.RequestViewModels.Count(); ++i)
            {
                var item = Model.RequestViewModels[i];
                <tr>
                    <td>
                        @item.ItemName
                    </td>
                    <td>
                        @item.Lender
                    </td>
                    <td>
                        @item.Rate
                    </td>
                    <td>
                        @item.Periods
                    </td>
                    <td>
                        @switch (item.CurrentStatus)
                        {
                            case Request.RequestStatus.Pending:
                                <label>Pending</label>
                                break;
                            case Request.RequestStatus.Accepted:
                                using (Html.BeginForm("SetupMeeting", "Request", FormMethod.Get))
                                {
                                    <button class="btn btn-primary" type="submit" name="requestId" value=@item.RequestId>Set Up Meeting!</button>
                                }
                                break;
                            case Request.RequestStatus.PendingMeetUp:
                                <label>Awaiting Owner To Confirm Time</label>
                                break;
                            default:
                                <label>@Html.DisplayFor(model=>model.RequestViewModels[i].CurrentStatus)</label>
                                break;

                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>